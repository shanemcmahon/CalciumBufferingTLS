source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Setup.Ca.Buffering.TLS.R')
success
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
any(beta[!ifixb] < beta.lower[!ifixb] + (beta.upper[!ifixb] - beta.lower[!ifixb]) * parameter.boundary.margin) | any(beta[!ifixb] > beta.upper[!ifixb] - (beta.upper[!ifixb] - beta.lower[!ifixb]) * parameter.boundary.margin)
resample(1,c(TRUE,FALSE))
resample(c(TRUE,FALSE), 1)
resample(c(TRUE,FALSE), 1)
resample(c(TRUE,FALSE), 1)
resample(c(TRUE,FALSE), 1)
resample(c(TRUE,FALSE), 1)
resample(c(TRUE,FALSE), 1)
source('~/.active-rstudio-document')
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
filename <- choose.files()
filename <- choose.files()
dat.1 <- read.csv(filename)
dat.1
dat.1$Fi
F.MAX
F.MAX <- .995
dat.1$Fi < F.MAX
dat.1$Ff < F.MAX
dat.1$Fi < F.MAX & dat.1$Ff < F.MAX
dat.1 <- dat.1[dat.1$Fi < F.MAX & dat.1$Ff < F.MAX,]
dat.1
y <- dat.1$delta_ca_total
y
dat.1$noise_i_ca/(abs(dat.1$sum_i_ca))*dat.1$delta_ca_total
y <- dat.1$delta_ca_total/1000
y
mean(dat.1$noise_i_ca/(abs(dat.1$sum_i_ca))*dat.1$delta_ca_total)
mean(dat.1$noise_i_ca/(abs(dat.1$sum_i_ca))*dat.1$delta_ca_total)/1000
y
y <- matrix(y, nrow = length(y))
y
sem.y <- matrix(mean(dat.1$noise_i_ca/(abs(dat.1$sum_i_ca))*dat.1$delta_ca_total)/1000, nrow = nrow(y))
sem.y
dat.1$Fi
dat.1$Ff
rbind(dat.1$Fi,dat.1$Ff)
cbind(dat.1$Fi,dat.1$Ff)
dat.1$sem_Ff
dat.1$sem_Fi
c(dat.1$sem_Fi,dat.1$sem_Ff)
mean(c(dat.1$sem_Fi,dat.1$sem_Ff))
sem.y
mean
x
sem.x <- matrix(mean(c(dat.1$sem_Fi,dat.1$sem_Ff)),nrow = nrow(x),ncol = ncol(x))
sem.x
sem.x/x
sem.y/y
write.csv(x, "f.csv")
write.csv(x, "f.csv", row.names=FALSE)
write.csv(sem.x,f.sem.csv, row.names=FALSE)
write.csv(y, "ca.csv", row.names=FALSE)
write.csv(sem.y, "ca.sem.csv", row.names=FALSE)
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
write.csv(x, "f.csv", row.names=FALSE)
write.csv(sem.x, "f.sem.csv", row.names=FALSE)
write.csv(y, "ca.csv", row.names=FALSE)
write.csv(sem.y, "ca.sem.csv", row.names=FALSE)
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
x
sem.x
y
sem.y
y <- dat.1$delta_ca_total/1000
y <- matrix(y, nrow = length(y))
y
y <- dat.1$delta_ca_total/1000
y
y <- matrix(y, nrow = length(y))
sem.y <- matrix(mean(dat.1$noise_i_ca/(abs(dat.1$sum_i_ca))*dat.1$delta_ca_total)/1000, nrow = nrow(y))
sem.y
x <- cbind(dat.1$Fi,dat.1$Ff)
x
sem.x <- matrix(mean(c(dat.1$sem_Fi,dat.1$sem_Ff)),nrow = nrow(x),ncol = ncol(x))
sem.x
write.csv(x, "f.csv", row.names=FALSE)
write.csv(sem.x, "f.sem.csv", row.names=FALSE)
write.csv(y, "ca.csv", row.names=FALSE)
write.csv(sem.y, "ca.sem.csv", row.names=FALSE)
print(mean(sem.y/y))
print(mean(sem.x/x))
source('~/.active-rstudio-document')
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
parameter.is.fixed <- c(rf = TRUE, kd.dye = FALSE, bt.dye = TRUE, kd.1 = FALSE, bt.1 = FALSE, kd.2 = TRUE, bt.2 = TRUE, kappa.nonsaturable = TRUE, accessible.volume = FALSE)
beta <- c(rf = 50, kd.dye = .4, bt.dye = 100, kd.1 = 0, bt.1 = 0, kd.2 = 0, bt.2 = 0, kappa.nonsaturable = 0, accessible.volume = 1  )
beta
1/1.5
source('~/.active-rstudio-document')
filename <- choose.files()
dat.1 <- read.csv(filename)
dat.1
F.MAX <- .995
dat.1
y <- dat.1$delta_ca_total
y <- matrix(y, nrow = length(y))
sem.y <- matrix(mean(dat.1$noise_i_ca/(abs(dat.1$sum_i_ca))*dat.1$delta_ca_total), nrow = nrow(y))
x <- cbind(dat.1$Fi,dat.1$Ff)
sem.x <- matrix(mean(c(dat.1$sem_Fi,dat.1$sem_Ff)),nrow = nrow(x),ncol = ncol(x))
y
sem.y
x
sem.x
dat.1
sem.y
sem.x
print(mean(sem.y/y))
print(mean(sem.x/x))
write.csv(x, "f.csv", row.names=FALSE)
write.csv(sem.x, "f.sem.csv", row.names=FALSE)
write.csv(y, "ca.csv", row.names=FALSE)
write.csv(sem.y, "ca.sem.csv", row.names=FALSE)
dat.1
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Setup.Ca.Buffering.TLS.R')
install.packages(pkg.name)
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Setup.Ca.Buffering.TLS.R')
install.packages(pkg.name)
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Setup.Ca.Buffering.TLS.R')
install.packages(pkg.name)
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
source('C:/Users/shane/Desktop/CalciumBufferingTLS.2/Run.Ca.Buffering.TLS.R')
source('~/.active-rstudio-document')
data.directory = ""
fluorescence.filename = "f.csv"
file.path(data.directory,fluorescence.filename)
data.directory = "F://Documents/"
file.path(data.directory,fluorescence.filename)
strtoi("hello")
data.directory = "F://Documents"
#The fluorescence measurement data:
fluorescence.filename = "f.csv"
#Fluorescence measurement error estimates:
fluorescence.se.filename = "f.sem.csv"
#Total calcium increment:
delta.ca.total.filename = "ca.csv"
#Total calcium increment error estimates:
delta.ca.total.se.filename = "ca.sem.csv"
String.Length <- function(str.1){
i <- 1
repeat{
if(substring(str.1,i,i+1)=="")
return(i-1)
i <- i +1
}
}
interactive.file.chooser = FALSE
#file path to the directory containing the data:
data.directory = "F://Documents"
#The fluorescence measurement data:
fluorescence.filename = "f.csv"
#Fluorescence measurement error estimates:
fluorescence.se.filename = "f.sem.csv"
#Total calcium increment:
delta.ca.total.filename = "ca.csv"
#Total calcium increment error estimates:
delta.ca.total.se.filename = "ca.sem.csv"
String.Length(data.directory)
String.Length(data.directory)
substring(data.directory,String.Length(data.directory))
data.directory
substring(data.directory,String.Length(data.directory)) == "/"
data.directory = "F://Documents/"
substring(data.directory,String.Length(data.directory)) == "/"
String.Length(data.directory)
substring(data.directory,1,String.Length(data.directory)
substring(data.directory,1,String.Length(data.directory))
String.Length(data.directory)
substring(data.directory,String.Length(data.directory))
substring(data.directory,1, String.Length(data.directory))
substring(data.directory,1, String.Length(data.directory))
substring(data.directory,1, String.Length(data.directory)-1)
interactive.file.chooser
!interactive.file.chooser
data.directory
fluorescence.filename
fluorescence.filename
fluorescence.se.filename
delta.ca.total.filename
delta.ca.total.se.filename
file.path(data.directory,fluorescence.filename)
data.directory
data.directory
if(!interactive.file.chooser){
if(substring(data.directory,String.Length(data.directory)) == "/"){
data.directory <-  substring(data.directory,1, String.Length(data.directory)-1)
}
fluorescence.filename <- file.path(data.directory,fluorescence.filename)
fluorescence.se.filename <- file.path(data.directory, fluorescence.se.filename)
delta.ca.total.filename <- file.path(data.directory, delta.ca.total.filename)
delta.ca.total.se.filename <- file.path(data.directory, delta.ca.total.se.filename)
}
delta.ca.total.se.filename
data.directory = "F://Documents"
#The fluorescence measurement data:
fluorescence.filename = "f.csv"
#Fluorescence measurement error estimates:
fluorescence.se.filename = "f.sem.csv"
#Total calcium increment:
delta.ca.total.filename = "ca.csv"
#Total calcium increment error estimates:
delta.ca.total.se.filename = "ca.sem.csv"
if(!interactive.file.chooser){
if(substring(data.directory,String.Length(data.directory)) == "/"){
data.directory <-  substring(data.directory,1, String.Length(data.directory)-1)
}
fluorescence.filename <- file.path(data.directory,fluorescence.filename)
fluorescence.se.filename <- file.path(data.directory, fluorescence.se.filename)
delta.ca.total.filename <- file.path(data.directory, delta.ca.total.filename)
delta.ca.total.se.filename <- file.path(data.directory, delta.ca.total.se.filename)
}
delta.ca.total.se.filename
getwd()
paste("Finished. Results are contained in", getwd())
print(paste("Finished. Results are contained in", file.path(getwd(), "results.txt") ))
